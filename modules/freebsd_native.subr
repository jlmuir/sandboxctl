# Copyright 2016 Google Inc.
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are
# met:
#
# * Redistributions of source code must retain the above copyright
#   notice, this list of conditions and the following disclaimer.
# * Redistributions in binary form must reproduce the above copyright
#   notice, this list of conditions and the following disclaimer in the
#   documentation and/or other materials provided with the distribution.
# * Neither the name of Google Inc. nor the names of its contributors
#   may be used to endorse or promote products derived from this software
#   without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
# "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
# A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
# OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
# LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

# \file freebsd_native.subr
# Sandbox type to null-mount a live FreeBSD system.

shtk_import cli
shtk_import sandbox

# List of directories to null-mount in read-only mode.
_FREEBSD_NATIVE_BINDFS_MOUNTS="
    bin lib libexec sbin
    usr/bin usr/include usr/lib usr/libdata usr/libexec usr/sbin usr/share"


# Prints the configuration variables exposed by this sandbox type.
freebsd_native_config_vars() {
    echo "FREEBSD_NATIVE_SOURCE"
}


# Sets defaults for the configuration variables used by this sandbox type.
freebsd_native_set_defaults() {
    # Remember to update sandboxctl.conf(5) if you change any default values.
    shtk_config_set FREEBSD_NATIVE_SOURCE "/usr/src"
}


# Sets up a FreeBSD sandbox that uses null mounts.
#
# \param root Path to the sandbox directory.
freebsd_native_create() {
    local root="${1}"; shift

    local source="$(shtk_config_get FREEBSD_NATIVE_SOURCE)"
    shtk_cli_debug "Bootstrapping sandbox from ${source}"

    quiet() { "${@}"; }
    shtk_cli_log_level debug || quiet() { "${@}" >/dev/null 2>&1; }

    if [ -e "${source}/Makefile.inc1" ]; then
        for target in distrib-dirs _obj everything distribution; do
            MAKEOBJDIRPREFIX="${root}/usr/obj" quiet make -C "${source}" \
                DESTDIR="${root}" SUBDIR_OVERRIDE=etc "${target}" \
                || shtk_cli_error "make ${target} failed"
        done
    elif [ -e "${source}/base.txz" ]; then
        # TODO(jmmv): Extend sandbox_extract to support xz files and use it here
        # instead of the direct call to tar.
        quiet tar -xJvf "${source}/base.txz" -C "${root}" ./etc ./root ./var
        quiet mtree -deU -f "${root}/etc/mtree/BSD.root.dist" -p "${root}"
        quiet mtree -deU -f "${root}/etc/mtree/BSD.usr.dist" -p "${root}/usr"
        quiet mtree -deU -f "${root}/etc/mtree/BSD.var.dist" -p "${root}/var"
    else
        shtk_cli_error "Cannot find ${source}"
    fi
    chflags -R noschg,nouchg "${root}" ${quiet}
    rm -rf "${root}/usr/obj" ${quiet}
}


# Enters a FreeBSD sandbox that uses null mounts.
#
# \param root Path to the sandbox directory.
freebsd_native_mount() {
    local root="${1}"; shift

    cmp -s /etc/resolv.conf "${root}/etc" || cp /etc/resolv.conf "${root}/etc"

    for dir in ${_FREEBSD_NATIVE_BINDFS_MOUNTS}; do
        sandbox_bindfs "/${dir}" "${root}/${dir}"
    done

    mount -t devfs devfs "${root}/dev"

    grep "^root:.*:/bin/sh$" "${root}/etc/passwd" >/dev/null 2>&1 \
        || chroot "${root}" chsh -s /bin/sh root
}
